(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{621:function(v,a,_){"use strict";_.r(a);var s=_(17),t=Object(s.a)({},(function(){var v=this,a=v.$createElement,_=v._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h3",{attrs:{id:"缓存问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#缓存问题"}},[v._v("#")]),v._v(" 缓存问题")]),v._v(" "),_("ul",[_("li",[v._v("分布式缓存")]),v._v(" "),_("li",[v._v("Redis缓存雪崩")]),v._v(" "),_("li",[v._v("Redis缓存击穿")]),v._v(" "),_("li",[v._v("Redis缓存穿透")]),v._v(" "),_("li",[v._v("缓存预热")]),v._v(" "),_("li",[v._v("缓存降级")])]),v._v(" "),_("h4",{attrs:{id:"redis缓存雪崩"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis缓存雪崩"}},[v._v("#")]),v._v(" Redis缓存雪崩")]),v._v(" "),_("p",[v._v("出现概率: ★★★★★")]),v._v(" "),_("p",[v._v("这个在Redis面试的题目中算是出镜率特别高的问题了, 建议仔细消化一下。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/484cab7c-e4bb-476d-889e-b68c0f60124d.png",alt:""}})]),v._v(" "),_("p",[v._v("1)、缓存雪崩是指"),_("font",{attrs:{color:"#FF000"}},[v._v("大量的缓存key")]),v._v("无法在Redis缓存中进行处理，紧接着，"),_("font",{attrs:{color:"#FF000"}},[v._v("短时间大量请求直接打到数据库层")]),v._v("，导致数据库层的压力激增, 可能瞬间就会导致数据库宕机。")],1),v._v(" "),_("p",[v._v("缓存雪崩一般是由两个原因导致的，应对方案也有所不同，我们一个个来看。")]),v._v(" "),_("p",[v._v("第一个原因是：缓存中有大量数据同时过期，比如说一些APP首页缓存数据，都设置了当天有效， 凌晨过期， 在第二天流量高峰时, 大量用户访问的请求， 没有换成从数据库中读取数据。如果应用的并发请求量很大，那么数据库的压力也突然变得很大，可能会造成缓存雪崩。")]),v._v(" "),_("p",[v._v("这种类似的问题解决思路也基本简单, 打散过期时间, 比如设置过期时间为 24小时之后 + 随机N分钟。")]),v._v(" "),_("p",[v._v("另外一个原因是Redis宕机, 这个就需要分析Redis宕机的原因了， 是因为磁盘满了还是内存满了, 根据情况进行处理，或者升配置什么的。\n如果是内存满了, 也需要考虑是不是缓存过期回收策略的问题。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/eed166b8-45d3-4cec-8add-fc1c6102ef1a.png",alt:""}})]),v._v(" "),_("h4",{attrs:{id:"redis缓存击穿"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis缓存击穿"}},[v._v("#")]),v._v(" Redis缓存击穿")]),v._v(" "),_("p",[v._v("出现概率: ★★★★")]),v._v(" "),_("p",[v._v("缓存击穿跟缓存雪崩有点类似，缓存雪崩是大规模的key失效，而"),_("font",{attrs:{color:"#FF000"}},[v._v("缓存击穿是某个热点的key失效")]),v._v("，大并发集中对其进行请求，就会造成大量请求读缓存没读到数据，从而导致高并发访问数据库，引起数据库压力剧增。这种现象就叫做缓存击穿。")],1),v._v(" "),_("p",[v._v("解决方案：")]),v._v(" "),_("p",[v._v("a)、在缓存失效后，通过互斥锁或者队列来控制读数据写缓存的线程数量，比如某个key只允许一个线程查询数据和写缓存，其他线程等待。这种方式会阻塞其他的线程，此时系统的吞吐量会下降")]),v._v(" "),_("p",[v._v("b)、热点数据缓存永远不过期。")]),v._v(" "),_("p",[v._v("永不过期实际包含两层意思：")]),v._v(" "),_("p",[v._v("物理不过期，针对热点key不设置过期时间")]),v._v(" "),_("p",[v._v("逻辑过期，把过期时间存在key对应的value里，如果发现要过期了，通过一个后台的异步线程进行缓存的构建")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/f7043613-5895-4044-b4c2-f85a0cae3a46.png",alt:""}})]),v._v(" "),_("h4",{attrs:{id:"redis缓存穿透"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis缓存穿透"}},[v._v("#")]),v._v(" Redis缓存穿透")]),v._v(" "),_("p",[v._v("出现概率: ★★★★")]),v._v(" "),_("p",[v._v("缓存穿透是指用户请求的数据在"),_("font",{attrs:{color:"#FF000"}},[v._v("缓存中不存在即没有命中，同时在数据库中也不存在")]),v._v("，导致用户每次请求该数据都要去数据库中查询一遍。")],1),v._v(" "),_("p",[v._v("如果短时间大量类似请求落在数据库上，造成数据库压力过大，可能导致数据库承受不住而宕机崩溃。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/e83cb6d7-ef75-4844-a11f-e0fc066c27f4.png",alt:""}})]),v._v(" "),_("p",[v._v("解决方法：")]),v._v(" "),_("p",[v._v("a)、将无效的key存放进Redis中：")]),v._v(" "),_("p",[v._v('当出现Redis查不到数据，数据库也查不到数据的情况，我们就把这个key保存到Redis中，设置value="null"，并设置其过期时间极短，后面再出现查询这个key的请求的时候，直接返回null，就不需要再查询数据库了。但这种处理方式是有问题的，假如传进来的这个不存在的Key值每次都是随机的，那存进Redis也没有意义。')]),v._v(" "),_("p",[v._v("b)、使用布隆过滤器：")]),v._v(" "),_("p",[v._v("如果布隆过滤器判定某个 key 不存在布隆过滤器中，那么就一定不存在，如果判定某个 key 存在，那么很大可能是存在(存在一定的误判率)。于是我们可以在缓存之前再加一个布隆过滤器，将数据库中的所有key都存储在布隆过滤器中，在查询Redis前先去布隆过滤器查询 key 是否存在，如果不存在就直接返回，不让其访问数据库，从而避免了对底层存储系统的查询压力。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/ab84f46b-1b14-47b0-b15c-5fc40b78f1be.png",alt:""}})]),v._v(" "),_("h4",{attrs:{id:"redis缓存预热"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis缓存预热"}},[v._v("#")]),v._v(" Redis缓存预热")]),v._v(" "),_("p",[v._v("出现概率: ★★★")]),v._v(" "),_("p",[v._v('缓存预热如字面意思，当系统上线时，缓存内还没有数据，如果直接提供给用户使用，每个请求都会穿过缓存去访问底层数据库，如果并发大的话，很有可能在上线当天就会宕机，因此我们需要在上线前先将数据库内的热点数据缓存至Redis内再提供出去使用，这种操作就成为"缓存预热"。')]),v._v(" "),_("p",[v._v("缓存预热的实现方式有很多，比较通用的方式是写个批任务，在启动项目时或定时去触发将底层数据库内的热点数据加载到缓存内。")]),v._v(" "),_("h4",{attrs:{id:"redis缓存降级"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis缓存降级"}},[v._v("#")]),v._v(" Redis缓存降级")]),v._v(" "),_("p",[v._v("出现概率: ★★★")]),v._v(" "),_("p",[v._v("缓存降级是指当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，即使是有损部分其他服务，仍然需要保证主服务可用。可以将其他次要服务的数据进行缓存降级，从而提升主服务的稳定性。")]),v._v(" "),_("p",[v._v("降级的目的是保证核心服务可用，即使是有损的。如去年双十一的时候淘宝购物车无法修改地址只能使用默认地址，这个服务就是被降级了，这里阿里保证了订单可以正常提交和付款，但修改地址的服务可以在服务器压力降低，并发量相对减少的时候再恢复。")]),v._v(" "),_("p",[v._v("也欢迎关注我的公众号: "),_("code",[v._v("漫步coding")]),v._v("。 一起交流, 在coding的世界里漫步, 回复: "),_("font",{attrs:{color:"#FF000"}},[_("code",[v._v("redis")])]),v._v(", 免费获取最新Redis面试题(含答案)。")],1),v._v(" "),_("p",[_("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/5cb0c91e-fd83-4a04-8df6-65fb602b3834.png",alt:""}})]),v._v(" "),_("p",[v._v("希望这篇文章可以帮助大家, 也希望大家都能找到的好工作。")])])}),[],!1,null,null,null);a.default=t.exports}}]);