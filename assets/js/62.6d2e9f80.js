(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{622:function(e,s,t){"use strict";t.r(s);var a=t(17),v=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"运维和部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运维和部署"}},[e._v("#")]),e._v(" 运维和部署")]),e._v(" "),t("ul",[t("li",[e._v("Redis 如何设置密码及验证密码？")]),e._v(" "),t("li",[e._v("Redis 如何做内存优化？")])]),e._v(" "),t("h4",{attrs:{id:"redis-如何设置密码及验证密码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-如何设置密码及验证密码"}},[e._v("#")]),e._v(" Redis 如何设置密码及验证密码？")]),e._v(" "),t("p",[e._v("出现概率: ★★★")]),e._v(" "),t("p",[e._v("redis没有实现访问控制这个功能，但是它提供了一个轻量级的认证方式，可以编辑redis.conf配置来启用认证。")]),e._v(" "),t("p",[e._v("1、初始化Redis密码：")]),e._v(" "),t("p",[e._v("在配置文件中有个参数： requirepass  这个就是配置redis访问密码的参数；")]),e._v(" "),t("p",[e._v("比如 requirepass test123；（Ps:需重启Redis才能生效）")]),e._v(" "),t("p",[e._v("redis的查询速度是非常快的，"),t("font",{attrs:{color:"#FF000"}},[e._v("外部用户一秒内可以尝试多达150K个密码；所以密码要尽量长")]),e._v("（对于DBA 没有必要必须记住密码）；")],1),e._v(" "),t("p",[e._v("2、不重启Redis设置密码：")]),e._v(" "),t("p",[e._v("在配置文件中配置requirepass的密码（当redis重启时密码依然有效）。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("redis 127.0.0.1:6379> config set requirepass test123\n")])])]),t("p",[e._v("查询密码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("redis 127.0.0.1:6379> config get requirepass\n(error) ERR operation not permitted\n")])])]),t("p",[e._v("密码验证：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("redis 127.0.0.1:6379> auth test123\nOK\n")])])]),t("p",[e._v("再次查询：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('redis 127.0.0.1:6379> config get requirepass\n1) "requirepass"\n2) "test123"\n')])])]),t("p",[e._v("PS：如果配置文件中没添加密码 那么redis重启后，密码失效；")]),e._v(" "),t("p",[e._v("3、在Redis集群中使用认证密码")]),e._v(" "),t("p",[e._v("如果Redis服务器，使用了集群。除了在master中配置密码外，也需要在slave中进行相应配置。在slave的配置文件中找到如下行，去掉注释并修改与master相同的密码即可：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# masterauth master-password\n")])])]),t("h4",{attrs:{id:"redis-如何做内存优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-如何做内存优化"}},[e._v("#")]),e._v(" Redis 如何做内存优化？")]),e._v(" "),t("p",[e._v("出现概率: ★★★")]),e._v(" "),t("p",[e._v("在思考如何做内存优化之前, 我们先看看redisObject对象的结构")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/b0817efd-cea7-4e9c-8a5d-06ffe5dcbba7.png",alt:""}})]),e._v(" "),t("ul",[t("li",[e._v("type 代表数据类型，比如 list, set, hash, 由于一共是 4 bits, 所以 redis 最多能支持 16 种")]),e._v(" "),t("li",[e._v("encoding 代表底层编码类型，比如 ziplist, intset, EMBSTR, raw 等等")]),e._v(" "),t("li",[t("font",{attrs:{color:"#FF000"}},[e._v("refcount 引用计数，对象创建时为 1, 当值为 0 时释放")])],1),e._v(" "),t("li",[e._v("ptr 指向真实数据，虽然是个指针，但有时为了高效使用内存，直接存储整型")])]),e._v(" "),t("p",[e._v("对象有如下特性：")]),e._v(" "),t("ul",[t("li",[e._v("redis 在执行命令之前，根据对象的类型就可以判断命令是否可以执行。")]),e._v(" "),t("li",[e._v("依托对象，可以针对不同的使用场景，为对象设置不同的数据结构实现，从而优化对象在不同场景下的使用效率。")]),e._v(" "),t("li",[e._v("redis 对象系统实现了基于引用计数技术的内存回收机制，当程序不再使用某个对象的时候，这个对象所占用的内存就会被自动释放。")]),e._v(" "),t("li",[e._v("redis 使用引用计数技术实现了对象共享机制，一定场景下，可以通过让多个数据库键共享同一个对象来节约内存。")]),e._v(" "),t("li",[e._v("redis 对象带有访问时间记录，可以用来计算数据库键的空转时间，在服务器启用 maxmemory 的情况下，空转时长较大的键可能被优先删除。")])]),e._v(" "),t("p",[e._v("1、"),t("font",{attrs:{color:"#FF000"}},[e._v("缩减键值对象")])],1),e._v(" "),t("p",[e._v("缩减键（key）和值（value）的长度")]),e._v(" "),t("p",[e._v("key长度：如在设计键时，在完整描述业务情况下，键值越短越好。"),t("br"),e._v("\nvalue长度：值对象缩减比较复杂，常见需求是把业务对象序列化成二进制数组放入Redis。")]),e._v(" "),t("p",[e._v("类似如果想在Redis 存用户的简介:")]),e._v(" "),t("p",[e._v("这样如果一个用户的")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("{gender: 'male', name: '漫步coding'} \n")])])]),t("p",[e._v("可以做一些映射")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("keyMap = {\n  'gender': 'a'\n  'sex': 'b',\n  ...\n  'profile': 'a1',\n  'name': 'b1',\n}\n")])])]),t("p",[e._v("存在redis映射后就是")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("{'a': 'male', 'b1': '漫步coding'}\n")])])]),t("p",[e._v("同时也可以对female, male 这些枚举值做一次映射。")]),e._v(" "),t("p",[e._v("同时值对象除了存储二进制数据之外，通常还会使用通用格式存储数据比如:json，xml等作为字符串存储在Redis中。这种方式优点是方便调试和跨语言，但是同样的数据相比字节数组所需的空间更大，在内存紧张的情况下，可以使用通用压缩算法压缩json,xml后再存入Redis，从而降低内存占用，例如使用GZIP压缩后的json可降低约60%的空间。")]),e._v(" "),t("p",[e._v("2、"),t("font",{attrs:{color:"#FF000"}},[e._v("共享对象池")])],1),e._v(" "),t("p",[e._v("对象共享池指"),t("font",{attrs:{color:"#FF000"}},[e._v("Redis内部维护[0-9999]的整数对象池")]),e._v("。创建大量的整数类型redisObject存在内存开销，每个redisObject内部结构至少占16字节，甚至超过了整数自身空间消耗。所以Redis内存维护一个[0-9999]的整数对象池，用于节约内存。 除了整数值对象，其他类型如list,hash,set,zset内部元素也可以使用整数对象池。因此开发中在满足需求的前提下，尽量使用整数对象以节省内存。")],1),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" 127.0.0.1:6379> set a 1\nOK\n127.0.0.1:6379> object refcount a\n(integer) 2147483647\n127.0.0.1:6379> set b 1\nOK\n127.0.0.1:6379> object refcount b\n(integer) 2147483647\n127.0.0.1:6379> set c 10000\nOK\n127.0.0.1:6379> object refcount c\n(integer) 1\n127.0.0.1:6379>\n")])])]),t("p",[t("code",[e._v("object refcount b")]),e._v("和 "),t("code",[e._v("object refcount a")]),e._v("为什么是2147483647, 查看源码，发现新版本的redis中OBJ_SHARED_INTEGERS变量定义了共享整数10000(0-9999)，并且定义不被销毁的全局对象的引用数量OBJ_SHARED_REFCOUNT为INT_MAX，INT_MAX = 2^31 - 1 =2147483647。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/f1b1e108-fd59-4bfd-a173-d54bbf847511.png",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/0cb9d4d0-f4e2-4627-9923-a597d7d18914.png",alt:""}})]),e._v(" "),t("p",[e._v("但是如果对象超出 9999 范围等于 10000 的时候，比如 "),t("code",[e._v("object refcount c")]),e._v(" 返回的是 (integer) 1，就不会使用对象内存。另外， 这些共享对象不单单只有字符串键可以使用， 那些在数据结构中嵌套了字符串对象的对象（linkedlist 编码的列表对象、 hashtable 编码的哈希对象、 hashtable 编码的集合对象、以及 zset 编码的有序集合对象）都可以使用这些共享对象。")]),e._v(" "),t("p",[e._v("为什么 Redis 不共享包含字符串的对象？")]),e._v(" "),t("p",[e._v("redis 之所以只能使用数字共享，因为数字的复用概率最大，其次就是对于使用对象共享的关键问题就是判断相等性，只有在共享对象和目标对象完全相等的情况下，redis 才会使用共享对象。数字的比较算法复杂度是 o (1)，如果判断的是字符串，那么比较的复杂度是 o (n)，特别是长字符串更消耗性能。对于更复杂的数据结构，比如 hash、list 等，相等比较复杂度需要 o (n ^ 2)。对于单线程的 reids 来说，这显然不合理。其中只保留 10000 个对象共享也是防止对象池浪费。")]),e._v(" "),t("p",[e._v("3、"),t("font",{attrs:{color:"#FF000"}},[e._v("字符串优化")])],1),e._v(" "),t("p",[e._v("Redis自身实现的字符串结构有如下特点:")]),e._v(" "),t("ul",[t("li",[e._v("O(1)时间复杂度获取：字符串长度，已用长度，未用长度。")]),e._v(" "),t("li",[e._v("可用于保存字节数组，支持安全的二进制数据存储。")]),e._v(" "),t("li",[e._v("内部实现空间预分配机制，降低内存再分配次数。")]),e._v(" "),t("li",[e._v("惰性删除机制，字符串缩减后的空间不释放，作为预分配空间保留。")])]),e._v(" "),t("p",[e._v("在高并发写入场景中，"),t("font",{attrs:{color:"#FF000"}},[e._v("条件允许的情况下建议字符串长度控制在39字节以内，减少创建redisObject内存分配次数从而提高性能")]),e._v("。")],1),e._v(" "),t("p",[e._v("4、"),t("font",{attrs:{color:"#FF000"}},[e._v("控制key的数量")])],1),e._v(" "),t("p",[e._v("当使用Redis存储大量数据时，通常会存在"),t("font",{attrs:{color:"#FF000"}},[e._v("大量键，过多的键同样会消耗大量内存")]),e._v("。Redis本质是一个数据结构服务器，它为我们提供多种数据结构，如hash，list，set，zset 等结构。使用Redis时不要进入一个误区，大量使用get/set这样的API，把Redis当成Memcached使用。对于存储相同的数据内容利用Redis的数据结构降低外层键的数量，也可以节省大量内存。如下图所示，通过在客户端预估键规模，把大量键分组映射到多个hash结构中降低键的数量。")],1),e._v(" "),t("p",[t("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/246a8b53-1f60-48ec-a4bc-5b077aeaef6a.png",alt:""}})]),e._v(" "),t("p",[e._v("也欢迎关注我的公众号: "),t("code",[e._v("漫步coding")]),e._v("。 一起交流, 在coding的世界里漫步, 回复: "),t("font",{attrs:{color:"#FF000"}},[t("code",[e._v("redis")])]),e._v(", 免费获取最新Redis面试题(含答案)。")],1),e._v(" "),t("p",[t("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/5cb0c91e-fd83-4a04-8df6-65fb602b3834.png",alt:""}})]),e._v(" "),t("p",[e._v("希望这篇文章可以帮助大家, 也希望大家都能找到的好工作。")])])}),[],!1,null,null,null);s.default=v.exports}}]);