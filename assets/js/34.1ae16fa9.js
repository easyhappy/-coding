(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{596:function(n,a,s){"use strict";s.r(a);var e=s(17),p=Object(e.a)({},(function(){var n=this,a=n.$createElement,s=n._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h3",{attrs:{id:"题目描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[n._v("#")]),n._v(" 题目描述")]),n._v(" "),s("p",[n._v("给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 '.' 和 '*' 的正则表达式匹配。")]),n._v(" "),s("ul",[s("li",[n._v("'.' 匹配任意单个字符")]),n._v(" "),s("li",[n._v("'*' 匹配零个或多个前面的那一个元素")]),n._v(" "),s("li",[n._v("所谓匹配，是要涵盖 整个 字符串 s的，而不是部分字符串。")])]),n._v(" "),s("p",[s("font",{attrs:{color:"#FF000"}},[n._v("题目难度: ★★★★, 困难")])],1),n._v(" "),s("p",[n._v("示例 1：")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('输入：s = "aa", p = "a"\n输出：false\n解释："a" 无法匹配 "aa" 整个字符串。\n')])])]),s("p",[n._v("示例 2:")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("输入：s = \"aa\", p = \"a*\"\n输出：true\n解释：因为 '*' 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 'a'。因此，字符串 \"aa\" 可被视为 'a' 重复了一次。\n")])])]),s("p",[n._v("示例 3：")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('输入：s = "ab", p = ".*"\n输出：true\n解释：".*" 表示可匹配零个或多个（\'*\'）任意字符（\'.\'）。\n')])])]),s("p",[n._v("示例 4：")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('输入：s = "ab", p = ".*c"\n输出：false\n')])])]),s("p",[n._v("提示：")]),n._v(" "),s("ul",[s("li",[n._v("1 <= s.length <= 20")]),n._v(" "),s("li",[n._v("1 <= p.length <= 30")]),n._v(" "),s("li",[n._v("s 只包含从 a-z 的小写字母。")]),n._v(" "),s("li",[n._v("p 只包含从 a-z 的小写字母，以及字符 . 和 *。")]),n._v(" "),s("li",[n._v("保证每次出现字符 * 时，前面都匹配到有效的字符")])]),n._v(" "),s("h3",{attrs:{id:"代码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[n._v("#")]),n._v(" 代码实现")]),n._v(" "),s("p",[n._v("解题思路: 「动态规划」(DP) 是解决此类字符串匹配问题的通用方法。")]),n._v(" "),s("p",[n._v("1、状态定义")]),n._v(" "),s("p",[n._v("首先定义dp二维数组, 定义 "),s("code",[n._v("dp[i][j]")]),n._v(" 表示 s 的前 i 个字符和 p 的前 j 个字符能否匹配。")]),n._v(" "),s("p",[n._v("2、如果"),s("code",[n._v("p[j]")]),n._v(" 不是 "),s("code",[n._v("*")]),n._v(", "),s("code",[n._v(".")]),n._v(" 这两个特殊字符, 数学公式如下, 这种情况还是比较简单的。")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("if p[j] != \"*\" and p[j] != '.'{\n  if s[i] == p[j]{\n    dp[i][j] = dp[i-1][j-1]\n  }else{\n    dp[i][j] = false\n  }  \n}\n")])])]),s("p",[n._v("3、如果"),s("code",[n._v("p[j]")]),n._v(" = "),s("code",[n._v(".")]),n._v(", "),s("code",[n._v("p[j]")]),n._v(" 一定会和"),s("code",[n._v("s[i]")]),n._v(" 匹配成功")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("dp[i][j] = dp[i-1][j-1]\n")])])]),s("p",[n._v("4、如果"),s("code",[n._v("p[j]")]),n._v(" = "),s("code",[n._v("*")]),n._v(", 这个时候就需要分情况讨论.")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("我们可以假设s、p 和 i,j 如下值:\n\n                i-1  i\ns: d            a    a a \np: d  a         a    * a c\n      j -2     j-1   j\n")])])]),s("p",[n._v("4.1)、如果"),s("code",[n._v("*")]),n._v(" 匹配0次, 表示"),s("code",[n._v("p[j-1]")]),n._v(" 和 "),s("code",[n._v("p[j]")]),n._v(" 都不等于"),s("code",[n._v("s[i]")]),n._v(", "),s("code",[n._v("dp[i][j]")]),n._v("只能在"),s("code",[n._v("p[0..j-2]")]),n._v("判断是否是否包含"),s("code",[n._v("s[0..i]")]),n._v("字符串了")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("dp[i][j] = dp[i][j-2]\n")])])]),s("p",[n._v("4.2)、如果"),s("code",[n._v("*")]),n._v(" 匹配1次, "),s("code",[n._v("p[j]")]),n._v("和"),s("code",[n._v("p[j-1]")]),n._v("组成"),s("code",[n._v("a")]),n._v(", "),s("code",[n._v("p[j]")]),n._v("不参与匹配, 因为匹配成功， 那么"),s("code",[n._v("s[i]=p[j-1]")]),n._v(",  "),s("code",[n._v("dp[i][j]")]),n._v("可以转变成如下公式:")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("dp[i][j] = dp[i-1][j-2]  && s[i] == p[j-1]\n")])])]),s("p",[n._v("4.3)、如果"),s("code",[n._v("*")]),n._v(" 匹配2次, "),s("code",[n._v("p[j]")]),n._v("和"),s("code",[n._v("p[j-1]")]),n._v("组成"),s("code",[n._v("aa")]),n._v(", 因为匹配成功， 那么"),s("code",[n._v("s[i-1..i]")]),n._v("="),s("code",[n._v("p[j-1]")]),n._v(",  "),s("code",[n._v("dp[i][j]")]),n._v("可以转变成如下公式:")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("dp[i][j] = dp[i-2][j-2]  && s[i-1..i] == p[j-1]\n")])])]),s("p",[n._v("4.4)、如果"),s("code",[n._v("*")]),n._v(" 匹配3次, "),s("code",[n._v("p[j]")]),n._v("和"),s("code",[n._v("p[j-1]")]),n._v("组成"),s("code",[n._v("aaa")]),n._v(", 因为匹配成功， 那么"),s("code",[n._v("s[i-2..i]")]),n._v("="),s("code",[n._v("p[j-1]")]),n._v(",  "),s("code",[n._v("dp[i][j]")]),n._v("可以转变成如下公式:")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("dp[i][j] = dp[i-3][j-2]  && s[i-2..i] == p[j-1]\n")])])]),s("p",[n._v("4.5)、依次类推如果匹配n次")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("dp[i][j] = dp[i-n][j-2]  && s[i-n+1..i] == p[j-1]\n")])])]),s("p",[n._v("总的来看，当 "),s("code",[n._v("p[j]")]),n._v("= "),s("code",[n._v("*")]),n._v(" 时，对于匹配 0~n 次，公式就如下：")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("dp[i][j] = 匹配0次公式 or 匹配1次公式 or 匹配2次公式 or .. 匹配n次公式\n\ndp[i][j] =  dp[i][j-2] or  // 标记0\n            (dp[i-1][j-2]  && s[i] == p[j-1]) or  // 标记1\n            (dp[i-2][j-2]  && s[i-1..i] == p[j-1]) || or // 标记2\n            (dp[i-3][j-2]  && s[i-2..i] == p[j-1]) or// 标记3\n            ...\n            (dp[i-n][j-2]  && s[i-n+1..i] == p[j-1])// 标记n\n")])])]),s("p",[n._v("同理可以推出")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("\ndp[i-1][j] = dp[i-1][j-2] or (dp[i-2][j-2]  && s[i-1] == p[j-1]) or \n            (dp[i-3][j-2]  && s[i-2..i] == p[j-1]) || or \n            (dp[i-4][j-2]  && s[i-3..i] == p[j-1]) or\n            ...\n            (dp[i-n-1[j-2]  && s[i-n..i] == p[j-1])\n")])])]),s("p",[n._v("仔细观察"),s("code",[n._v("dp[i][j]")]),n._v(" 的 "),s("code",[n._v("dp[i-1][j]")]),n._v("的区别, 将"),s("code",[n._v("dp[i-1][j]")]),n._v("的等式两边都加上判断条件: "),s("code",[n._v("s[i] == p[j-1]")])]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("dp[i-1][j] && s[i] == p[j-1] //\n             p[j-1]) = (dp[i-1][j-2]  && s[i] == p[j-1]) or \n            (dp[i-2][j-2]  && s[i-1..i] == p[j-1]) || or \n            (dp[i-3][j-2]  && s[i-2..i] == p[j-1]) or\n            ...\n            (dp[i-n][j-2]  && s[i-n+1..i] == p[j-1])\n")])])]),s("p",[n._v("可以看到 "),s("code",[n._v("dp[i-1][j] && s[i] == p[j-1]")]),n._v("的右边公式 正好是公式"),s("code",[n._v("dp[i][j]")]),n._v("的右边公式的 "),s("font",{attrs:{color:"#FF000"}},[n._v("标记1~标记n 部分")])],1),n._v(" "),s("p",[n._v("所以可以"),s("font",{attrs:{color:"#FF000"}},[n._v("替换， 并重新推导")]),s("code",[n._v("dp[i][j]")]),n._v("的"),s("strong",[n._v("最终推导公式如下:")])],1),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("dp[i][j] =  dp[i][j-2] or \n            dp[i-1][j] && s[i] == p[j-1]\n")])])]),s("p",[n._v("5、然后就是dp初始化了")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("dp[0][0]=true;//两个空字串\nfor(int j=1;j<len(p);j++)//找出s为空 但p因为* 为空的情况\n{\n    if(p[j]=='*')\n    {\n        dp[0][j+1]=dp[0][j-1];\n    }\n}\n")])])]),s("blockquote",[s("p",[n._v("tips: 以下代码是使用Go代码实现的不同解法, 文章最后可以看C++、C、Java、Python实现")])]),n._v(" "),s("p",[n._v("具体代码如下:")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("func isMatch(s string, p string) bool {\n  sLength := len(s)\n  pLength := len(p)\n\n  dp := make([][]bool, sLength + 1)\n  for i := 0; i < sLength + 1; i++{\n    dp[i] = make([]bool, pLength + 1)\n  }\n  dp[0][0] = true\n  for j := 1; j < pLength + 1; j++ {\n    if (p[j-1] == '*') {\n      dp[0][j] = dp[0][j-2]\n    }\n  }\n\n  for i := 1; i <= sLength; i++ {\n    for j := 1; j <= pLength; j++ {\n\n      if s[i-1] == p[j-1] || p[j-1] == '.' {\n        dp[i][j] = dp[i-1][j-1]\n      }else if p[j-1] == '*'{\n        if s[i-1] != p[j-2] && p[j-2] != '.'{\n          dp[i][j] = dp[i][j-2]\n        } else{\n          dp[i][j] = dp[i][j-2] || dp[i-1][j]\n        }\n      }\n    }\n  }\n\n  return dp[sLength][pLength]\n}\n")])])]),s("p",[s("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/4853f5d5-85f2-47d2-9b81-eb02d33bf4ce.png",alt:""}})]),n._v(" "),s("h3",{attrs:{id:"其他语言版本如下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他语言版本如下"}},[n._v("#")]),n._v(" 其他语言版本如下:")]),n._v(" "),s("p",[n._v("1、Python3")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n\n        m, n = len(s), len(p)\n        dp = [[False] * (n+1) for _ in range(m+1)]\n        \n        # 初始化\n        dp[0][0] = True\n        for j in range(1, n+1):\n            if p[j-1] == '*':\n                dp[0][j] = dp[0][j-2]\n\n        # 状态更新\n        for i in range(1, m+1):\n            for j in range(1, n+1):\n                if s[i-1] == p[j-1] or p[j-1] == '.':\n                    dp[i][j] = dp[i-1][j-1]\n                elif p[j-1] == '*':     # 【题目保证'*'号不会是第一个字符，所以此处有j>=2】\n                    if s[i-1] != p[j-2] and p[j-2] != '.':\n                        dp[i][j] = dp[i][j-2]\n                    else:\n                        dp[i][j] = dp[i][j-2] | dp[i-1][j]\n        \n        return dp[m][n]\n\n")])])]),s("p",[s("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/a6743eeb-1a73-4e5d-86b8-cdbc1276c17f.png",alt:""}})]),n._v(" "),s("p",[n._v("2、Javascript")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('const isMatch = (s, p) => {\n  if (s == null || p == null) return false;\n\n  const sLen = s.length, pLen = p.length;\n\n  const dp = new Array(sLen + 1);\n  for (let i = 0; i < dp.length; i++) {\n    dp[i] = new Array(pLen + 1).fill(false); // 将项默认为false\n  }\n  // base case\n  dp[0][0] = true;\n  for (let j = 1; j < pLen + 1; j++) {\n    // 思考1: 这里为什么要初始化\n    // 这是因为p[j - 1] 为*, dp[0][j - 2]匹配的话, dp[0][j]则匹配， 反之亦然\n    // \n    // 思考2: dp[0][j - 2]会出现数组越界的情况吗\n    // dp[0][j-2]越界的话 则为undefined\n    if (p[j - 1] == "*") dp[0][j] = dp[0][j - 2];\n  }\n  // 迭代\n  for (let i = 1; i < sLen + 1; i++) {\n    for (let j = 1; j < pLen + 1; j++) {\n\n      // 思考s[i - 1] == p[j - 1]时, dp[i][j] = dp[i - 1][j - 1]？\n      // \n      if (s[i - 1] == p[j - 1] || p[j - 1] == ".") {\n        dp[i][j] = dp[i - 1][j - 1];\n      } else if (p[j - 1] == "*") {\n        if (s[i - 1] == p[j - 2] || p[j - 2] == ".") {\n          dp[i][j] = dp[i][j - 2] || dp[i - 1][j - 2] || dp[i - 1][j];\n        } else {\n          dp[i][j] = dp[i][j - 2];\n        }\n      }\n    }\n  }\n  return dp[sLen][pLen]; // 长sLen的s串 是否匹配 长pLen的p串\n};\n')])])]),s("p",[s("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/0afc376c-5b21-4494-91e2-2ddd298be987.png",alt:""}})]),n._v(" "),s("p",[n._v("3、C++")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("class Solution {\npublic:\n    bool isMatch(string s, string p) {\n        int m = s.size();\n        int n= p.size();\n        vector<vector<bool>> dp(m+1, vector<bool>(n+1, false));\n        dp[0][0] = true;\n        for(int j=1; j<=n; j++)\n        {\n            if(p[j-1]=='*') dp[0][j] = dp[0][j-2];//按题意p第一个元素不可能为'*'所以不必担心j越界\n        }\n        for(int i=1; i<=m; i++)\n        {\n            for(int j=1; j<=n; j++)\n            {\n                if(s[i-1]==p[j-1] || p[j-1]=='.') dp[i][j] = dp[i-1][j-1];\n                else if(p[j-1]=='*')\n                {\n                    if(s[i-1]!=p[j-2] && p[j-2]!='.')\n                    {\n                        dp[i][j] = dp[i][j-2];\n                    }\n                    else\n                    {\n                        dp[i][j] = dp[i][j-2] | dp[i-1][j];\n                    }\n                }\n            }\n        }\n        return dp[m][n];\n    }\n};\n\n")])])]),s("p",[s("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/3e8cf1f8-b520-41bd-ad79-5cbea21d5179.png",alt:""}})]),n._v(" "),s("h3",{attrs:{id:"几种语言运行效果对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#几种语言运行效果对比"}},[n._v("#")]),n._v(" 几种语言运行效果对比")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/49abdd2e-136a-4d39-9ac2-b3af39d52512.png",alt:""}})]),n._v(" "),s("p",[n._v("也欢迎关注我的公众号: "),s("code",[n._v("漫步coding")]),n._v("。 一起交流, 在coding的世界里漫步。")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://images.xiaozhuanlan.com/uploads/photo/2022/5cb0c91e-fd83-4a04-8df6-65fb602b3834.png",alt:""}})])])}),[],!1,null,null,null);a.default=p.exports}}]);